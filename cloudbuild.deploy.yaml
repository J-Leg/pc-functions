steps:
- name: gcr.io/cloud-builders/docker
  id: docker-build
  args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/tracula-image', '.' ]

images:
  - 'gcr.io/$PROJECT_ID/tracula-image'

- name: gcr.io/cloud-builders/gcloud
  id: env-decrypt
  args: [ 'kms', 'decrypt', '--ciphertext-file=config/.env.yaml.enc', '--plaintext-file=/.env.yaml', '--location=global', '--keyring=traculabuild-keys', '--key=api-key' ]
  waitFor: [ 'docker-build' ]
  
- name: gcr.io/cloud-builders/gcloud
  id: deploy-daily
  args: ['functions', 'deploy', 'daily', '--runtime=go113', '--trigger-http', '--source=./', '--entry-point=ProcessDaily', '--env-vars-file=.env.yaml']
  waitFor: [ 'env-decrypt' ]

- name: gcr.io/cloud-builders/gcloud
  id: deploy-monthly
  args: ['functions', 'deploy', 'monthly', '--runtime=go113', '--trigger-http', '--source=./', '--entry-point=ProcessMonthly', '--env-vars-file=.env.yaml']
  waitFor: [ 'env-decrypt' ]

- name: gcr.io/cloud-builders/gcloud
  id: deploy-tracker
  args: ['functions', 'deploy', 'tracker', '--runtime=go113', '--trigger-http', '--source=./', '--entry-point=Track', '--env-vars-file=.env.yaml']
  waitFor: [ 'env-decrypt' ]

- name: gcr.io/cloud-builders/gcloud
  id: deploy-refresh
  args: ['functions', 'deploy', 'refresh', '--runtime=go113', '--trigger-http', '--source=./', '--entry-point=Refresh', '--env-vars-file=.env.yaml']
  waitFor: [ 'env-decrypt' ]
